[{"D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\index.js":"1","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\App.js":"2","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\store\\store.js":"3","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\api\\api.js":"4","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\components\\Newsfeed\\NewsfeedContainer.js":"5","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\api\\backendEmulation.js":"6","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\api\\localStorage.js":"7","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\store\\reducers\\globalReducer.js":"8","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\store\\reducers\\articlesReducer.js":"9","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\store\\thunkCreators.js":"10","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\components\\Newsfeed\\Newsfeed.js":"11","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\utils.js":"12","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\components\\Preloader\\Preloader.js":"13","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\components\\Newsfeed\\Button\\Button.js":"14","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\components\\Newsfeed\\FormToChange\\FormToChange.js":"15","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\components\\Newsfeed\\NewsItem\\NewsItem.js":"16","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\components\\Newsfeed\\Search\\Search.js":"17","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\components\\Newsfeed\\ModalToRead\\ModalToRead.js":"18"},{"size":493,"mtime":1611256971120,"results":"19","hashOfConfig":"20"},{"size":199,"mtime":1610121823154,"results":"21","hashOfConfig":"20"},{"size":498,"mtime":1609957357180,"results":"22","hashOfConfig":"20"},{"size":1687,"mtime":1610218627393,"results":"23","hashOfConfig":"20"},{"size":839,"mtime":1610286775831,"results":"24","hashOfConfig":"20"},{"size":2365,"mtime":1611258437903,"results":"25","hashOfConfig":"20"},{"size":750,"mtime":1610124105910,"results":"26","hashOfConfig":"20"},{"size":997,"mtime":1610184927731,"results":"27","hashOfConfig":"20"},{"size":1432,"mtime":1610205052627,"results":"28","hashOfConfig":"20"},{"size":2343,"mtime":1611319136966,"results":"29","hashOfConfig":"20"},{"size":3710,"mtime":1611319362203,"results":"30","hashOfConfig":"20"},{"size":1565,"mtime":1611257183627,"results":"31","hashOfConfig":"20"},{"size":882,"mtime":1610292831791,"results":"32","hashOfConfig":"20"},{"size":825,"mtime":1610293248875,"results":"33","hashOfConfig":"20"},{"size":4188,"mtime":1611319412731,"results":"34","hashOfConfig":"20"},{"size":1873,"mtime":1611319412731,"results":"35","hashOfConfig":"20"},{"size":1801,"mtime":1611319412730,"results":"36","hashOfConfig":"20"},{"size":2719,"mtime":1611319412730,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1kjmix0",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},"D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\index.js",[],["82","83"],"D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\App.js",[],"D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\store\\store.js",[],"D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\api\\api.js",["84","85"],"import baseAPI from './localStorage';\r\nimport backendEmulation, {urlObj as URLs, SERVER} from './backendEmulation';\r\n\r\nconst REQUEST_DELAY = 2000;\r\n\r\nexport default {\r\n  initBase: () => {\r\n    return !baseAPI.isInit() ? \r\n      fetch('./source/source.json')\r\n      .then(response => response.json())\r\n      .then(articles => {\r\n        baseAPI.create({articles});\r\n        return true;\r\n      })\r\n    : new Promise(resolve => {resolve(true)})\r\n  },\r\n  getArticles: () => makeRequest(SERVER + URLs.getArticles),\r\n  setArticle: item => makeRequest(SERVER + URLs.setArticle, {\r\n      method: item.id ? 'PUT' : 'POST',\r\n      body: item\r\n  }),\r\n  deleteArticle: id => makeRequest(SERVER + URLs.deleteArticle, {\r\n      method: 'DELETE',\r\n      body: {id}\r\n  }),\r\n};\r\n\r\nfunction makeRequest(url, options) {\r\n  return emulateRequest(url, options, REQUEST_DELAY)\r\n    .then(responseObj => processingResponse(responseObj))\r\n}\r\n\r\nfunction emulateRequest(url, options, delay) {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(backendEmulation(url, options))\r\n    }, delay)\r\n  });\r\n}\r\n\r\n/* processingResponse for emulations */\r\nasync function processingResponse(response) {\r\n  return response;\r\n}\r\n\r\n/* processingResponse for real requests */\r\n// async function processingResponse(responseObj) {\r\n//   const response = {ok: responseObj.ok};\r\n//   if (responseObj.ok) {\r\n//     try { response.body = await responseObj.json();}\r\n//     catch (e) { response.body = null; }\r\n//   } else {\r\n//     response.error = getErrorObj(responseObj)\r\n//   }\r\n//   return response;\r\n// }\r\n\r\nfunction getErrorObj(responseObj) {\r\n  // temporarily, there is no error object\r\n  return null;\r\n}","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\components\\Newsfeed\\NewsfeedContainer.js",["86","87"],"import React, { useEffect } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n// import { compose } from 'redux';\r\n\r\nimport api from '../../api/api';\r\nimport thunkCreators from '../../store/thunkCreators';\r\nimport Newsfeed from './Newsfeed';\r\n\r\n\r\nconst mapStateToProps = state => {return {\r\n  isLoading: state.global.isLoading,\r\n  mode: state.global.mode,\r\n  articles: state.articles.articles,\r\n  currentArticle: state.articles.currentArticle,\r\n  search: state.articles.search,\r\n}};\r\n\r\nconst NewsfeedContainer = (props) => {\r\n  useEffect(() => {\r\n    api.getArticles().then(response => {\r\n      if (response.ok && response.body) props.setBaseItems(response.body);\r\n    })\r\n  }, []);\r\n  return <Newsfeed {...props}/>\r\n}\r\nexport default connect(mapStateToProps, {...thunkCreators})(NewsfeedContainer);","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\api\\backendEmulation.js",[],"D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\api\\localStorage.js",["88"],"const BASE_KEY = 'NEWSFEED';\r\nexport const KEYS = {\r\n  articles: 'ARTICLES',\r\n};\r\n\r\nconst getBase = () => JSON.parse(localStorage.getItem(BASE_KEY));\r\nconst setBase = value => localStorage.setItem(BASE_KEY, JSON.stringify(value)) \r\n\r\nexport default {\r\n  isInit: () => localStorage.getItem(BASE_KEY) ? true : false,\r\n  create: data => setBase({articles: data.articles}),\r\n  get: key => {\r\n    let base = getBase();\r\n    switch (key) {\r\n      case KEYS.articles:\r\n        return base.articles;\r\n      default: return null;\r\n    }\r\n  },\r\n  set: (key, value) => {\r\n    let base = getBase();\r\n    switch (key) {\r\n      case KEYS.articles:\r\n        base.articles = value;\r\n        break;\r\n      default: return null;\r\n    }\r\n    setBase(base);\r\n  },\r\n}\r\n\r\n","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\store\\reducers\\globalReducer.js",[],"D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\store\\reducers\\articlesReducer.js",[],"D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\store\\thunkCreators.js",["89","90"],"import { initialize as initializeReduxForm } from 'redux-form';\r\nimport {getItemToSend} from '../utils';\r\nimport { \r\n  actionCreators as globalActionCreators, NEWSFEED, TO_READ, TO_CHANGE\r\n} from './reducers/globalReducer';\r\nimport {actionCreators as articlesActionCreators} from './reducers/articlesReducer';\r\nimport api from '../api/api';\r\n\r\n\r\nconst thunkCreators = {\r\n  setBaseItems: data => dispatch => {\r\n    dispatch(articlesActionCreators.setArticles(data));\r\n    dispatch(globalActionCreators.toggleLoading(false));\r\n  },\r\n  activateModal: (newsID, mode) => dispatch => {\r\n    dispatch(articlesActionCreators.setCurrentArticle(newsID));\r\n    dispatch(globalActionCreators.changeMode(mode));\r\n  },\r\n  deactivateModal: () => dispatch => {\r\n    dispatch(globalActionCreators.changeMode(NEWSFEED));\r\n    dispatch(articlesActionCreators.setCurrentArticle(null));\r\n  },\r\n  initFormToChange: data => dispatch => {\r\n    dispatch(initializeReduxForm('FormToChange', data));\r\n  },\r\n  setNewsItem: formData => dispatch => {\r\n    dispatch(globalActionCreators.toggleLoading(true));\r\n    api.setArticle(getItemToSend(formData))\r\n    .then(response => setChangesAndToggleToMain(response.body, dispatch));\r\n  },\r\n  deleteNewsItem: id => dispatch => {\r\n    dispatch(globalActionCreators.toggleLoading(true));\r\n    api.deleteArticle(id)\r\n    .then(response => setChangesAndToggleToMain(response.body, dispatch));\r\n  },\r\n  setSearch: ({searchString, articles}) => dispatch => {\r\n    dispatch(globalActionCreators.toggleLoading());\r\n    const serchArray = (searchString) ? \r\n      articles.filter(item => item.newsLayout && item.newsLayout.indexOf(searchString) !== -1)\r\n    : null;\r\n    dispatch(articlesActionCreators.setSearchArticles(serchArray));\r\n    dispatch(globalActionCreators.toggleLoading());\r\n  },\r\n  clearSearch: () => dispatch => {\r\n    dispatch(globalActionCreators.toggleLoading());\r\n    dispatch(initializeReduxForm('Search', {inputField: ''}));\r\n    dispatch(articlesActionCreators.setSearchArticles(null));\r\n    dispatch(globalActionCreators.toggleLoading());\r\n  },\r\n};\r\nexport default thunkCreators;\r\n\r\nfunction setChangesAndToggleToMain(articles, dispatch) {\r\n  dispatch(articlesActionCreators.setArticles(articles));\r\n  dispatch(globalActionCreators.changeMode(NEWSFEED));\r\n  dispatch(globalActionCreators.toggleLoading(false));\r\n}","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\components\\Newsfeed\\Newsfeed.js",[],"D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\utils.js",[],"D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\components\\Preloader\\Preloader.js",[],"D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\components\\Newsfeed\\Button\\Button.js",[],"D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\components\\Newsfeed\\FormToChange\\FormToChange.js",["91"],"import React, { useEffect } from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Button from '../Button/Button';\r\nimport Preloader from '../../Preloader/Preloader';\r\n\r\nimport styles from './styles.module.css';\r\nimport animate from '../../animation/styles.module.css';\r\n\r\nconst FormToChange = (props) => {\r\n  const {\r\n    className, newsItem, isLoading, \r\n    initForm, handlerToClose, handlerToDelete, handleSubmit,\r\n  } = props;\r\n\r\n  const {\r\n    id = null, original = null, name = null, preview = null, newsLayout = null\r\n  } = newsItem ? newsItem : {};\r\n\r\n  const initFormData = {\r\n    id, name, preview, original, newsLayout, \r\n    smallImage: newsItem ? newsItem.images.small : null,\r\n    largeImage: newsItem ? newsItem.images.large : null,\r\n  };\r\n\r\n  const classes = [\r\n    styles.FormToChange, className, animate.animate__animated, animate.animate__fadeIn\r\n  ].join(' ');\r\n\r\n  useEffect(() => {initForm(initFormData);}, []);\r\n\r\n  return <form className={classes} onSubmit={handleSubmit} >\r\n    {isLoading ? <Preloader absolute /> : null}\r\n\r\n    <div className={styles.imageBlock} >\r\n      <Field className={styles.infoInput} component={'input'} name={'id'} disabled/>\r\n      <div>\r\n        <span className={styles.fieldDescrip}>Path of small image of News</span>\r\n        <Field className={styles.input} component={'input'} name={'smallImage'}/>\r\n      </div>\r\n      <div>\r\n        <span className={styles.fieldDescrip}>Path of large image of News</span>\r\n        <Field className={styles.input} component={'input'} name={'largeImage'}/>\r\n      </div>\r\n    </div>\r\n    <div className={styles.detailsBlock} >\r\n      <div>\r\n        <span className={styles.fieldDescrip}>News headline</span>\r\n        <Field className={styles.input} component={'input'} name={'name'}/>\r\n      </div>\r\n      <div>\r\n        <span className={styles.fieldDescrip}>News preview</span>\r\n        <Field className={styles.input} component={'input'} name={'preview'}/>\r\n      </div>\r\n      <div>\r\n        <span className={styles.fieldDescrip}>Link to original</span>\r\n        <Field className={styles.input} component={'input'} name={'original'}/>\r\n      </div>\r\n    </div>\r\n    <div className={styles.layoutBlock} >\r\n      <span className={styles.fieldDescrip}>News layout</span>\r\n      <Field  className={styles.textarea} component={'textarea'} name={'newsLayout'} />\r\n    </div>\r\n    <div className={styles.buttonsBlock} >\r\n      <Button className={styles.closeButton} clickHandler={handlerToClose}>\r\n        <span>Close without saving</span><span>Close</span>\r\n      </Button>\r\n      { \r\n        id ?  <Button className={styles.deleteButton} clickHandler={() => handlerToDelete(id)}>\r\n                <span>Delete this news</span><span>Delete</span>\r\n              </Button>\r\n        : null\r\n      }\r\n      <Button className={styles.submitButton} isSubmit>\r\n        {newsItem ? 'change' : 'create'}\r\n      </Button>\r\n    </div>\r\n  </form>;\r\n};\r\n\r\n\r\nFormToChange.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([undefined]).isRequired]), \r\n  newsItem: PropTypes.oneOfType([PropTypes.shape({\r\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.oneOf([null]).isRequired]),\r\n    date: PropTypes.number,\r\n    original: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([null]).isRequired]),\r\n    name: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([null]).isRequired]),\r\n    preview: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([null]).isRequired]),\r\n    newsLayout: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([null]).isRequired]),\r\n    images:PropTypes.shape({\r\n      small: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([null]).isRequired]),\r\n      large: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([null]).isRequired]),\r\n    }),\r\n  }), PropTypes.oneOf([null]).isRequired]),\r\n  isLoading: PropTypes.bool,\r\n  initForm: PropTypes.func, \r\n  handlerToClose: PropTypes.func,\r\n  handlerToDelete: PropTypes.func,\r\n  handleSubmit: PropTypes.func,\r\n};\r\nconst ReduxFormToChange = reduxForm({form: 'FormToChange'})(FormToChange);\r\nexport default ReduxFormToChange;","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\components\\Newsfeed\\NewsItem\\NewsItem.js",["92"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {TO_READ, TO_CHANGE} from '../../../store/reducers/globalReducer';\r\nimport {getDateString} from '../../../utils';\r\nimport styles from './styles.module.css';\r\n\r\nconst NewsItem = (props) => {\r\n  const {className, imagePath, prewiev, id, activateModal, date} = props;\r\n  return <li  className={`${className} ${styles.NewsItem}`}>\r\n    <div className={styles.mainBlock}>\r\n      <div className={styles.contentWraper}>\r\n        <div className={styles.imageBlock}>\r\n          <img className={styles.image} src={imagePath} />\r\n        </div>\r\n        <div className={styles.contentBlock}>\r\n          <div className={styles.details} >\r\n            <button className={styles.changeButton} onClick={() => activateModal(id, TO_CHANGE)}>\r\n              To edit a news item click here.\r\n            </button>\r\n            <span className={styles.date}>{getDateString(date)}</span>\r\n          </div>\r\n          <p className={styles.prewiev}>{prewiev}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div className={styles.buttonBlock}>\r\n      <button className={`${styles.changeButton} ${styles.mobile}`} \r\n              onClick={() => activateModal(id, TO_CHANGE)}\r\n      >\r\n        Edit\r\n      </button>\r\n      <button className={styles.toReadMoreButton} onClick={() => activateModal(id, TO_READ)}>\r\n        ... Click here to read more\r\n      </button>\r\n    </div>\r\n    <span className={styles.dateMobile}>{getDateString(date)}</span>\r\n  </li>\r\n};\r\n\r\nNewsItem.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([undefined]).isRequired]),\r\n  imagePath: PropTypes.string, \r\n  prewiev: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([null]).isRequired]), \r\n  id: PropTypes.number, \r\n  date: PropTypes.number,\r\n  activateModal: PropTypes.func,\r\n};\r\nexport default NewsItem;","D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\components\\Newsfeed\\Search\\Search.js",[],"D:\\GIT\\vladimirleontev281@gmail.com\\GP\\src\\components\\Newsfeed\\ModalToRead\\ModalToRead.js",["93","94"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nimport {getNewsImagePath} from '../../../utils';\r\nimport Button from '../Button/Button';\r\n\r\nimport styles from './styles.module.css';\r\nimport animate from '../../animation/styles.module.css';\r\n\r\nconst ModalToRead = ({className, newsItem, handlerToClose}) => {\r\n  const {name, newsLayout, original} = newsItem;\r\n  const classes = [\r\n    styles.ModalToRead, className, animate.animate__animated, animate.animate__zoomIn\r\n  ].join(' ');\r\n\r\n  return (<div className={classes}>\r\n    <div className={styles.buttonsBlock}>\r\n      <Button className={styles.closeButton} clickHandler={handlerToClose}>close</Button>\r\n      { original ? \r\n        <a  className={styles.linkToOriginal} href={original} target={'_blank'}>go to original</a>\r\n      : null\r\n      }\r\n    </div>\r\n    <h1 className={styles.newsName}>{name}</h1>\r\n    <div className={styles.imageBlock}>\r\n      <div className={styles.topDecor}>horizontal decorative element</div>\r\n      <div className={styles.centerDecorBox}>\r\n        <div  className={styles.leftDecor}>vertical decorative element</div>\r\n        <div className={styles.imageBox}>\r\n          <img className={styles.image} src={getNewsImagePath(newsItem, {size: 'large'})}/>\r\n        </div>\r\n        <div  className={styles.rightDecor}>vertical decorative element</div>\r\n      </div>\r\n      <div className={styles.bottomDecor}>horizontal decorative element</div>\r\n    </div>\r\n    <div className={styles.content}>\r\n      {\r\n        ReactHtmlParser(newsLayout, {\r\n          transform: (node) => {\r\n            if (node.type === 'text' && !node.parent) {\r\n              return ReactHtmlParser(`<p>${node.data.replace(/\\n/g, '<br>')}</p>`);\r\n            }\r\n          }\r\n        })\r\n      }\r\n    </div>\r\n  </div>);\r\n};\r\n\r\nModalToRead.propTypes = {\r\n  className: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([undefined]).isRequired]),\r\n  newsItem: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    date: PropTypes.number,\r\n    original: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([null]).isRequired]),\r\n    name: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([null]).isRequired]),\r\n    preview: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([null]).isRequired]),\r\n    newsLayout: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([null]).isRequired]),\r\n    images:PropTypes.shape({\r\n      small: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([null]).isRequired]),\r\n      large: PropTypes.oneOfType([PropTypes.string, PropTypes.oneOf([null]).isRequired]),\r\n    }),\r\n  }), \r\n  handlerToClose: PropTypes.func,\r\n};\r\nexport default ModalToRead;",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":6,"column":1,"nodeType":"101","endLine":26,"endColumn":3},{"ruleId":"102","severity":1,"message":"103","line":58,"column":10,"nodeType":"104","messageId":"105","endLine":58,"endColumn":21},{"ruleId":"102","severity":1,"message":"106","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":17},{"ruleId":"107","severity":1,"message":"108","line":24,"column":6,"nodeType":"109","endLine":24,"endColumn":8,"suggestions":"110"},{"ruleId":"99","severity":1,"message":"100","line":9,"column":1,"nodeType":"101","endLine":30,"endColumn":2},{"ruleId":"102","severity":1,"message":"111","line":4,"column":53,"nodeType":"104","messageId":"105","endLine":4,"endColumn":60},{"ruleId":"102","severity":1,"message":"112","line":4,"column":62,"nodeType":"104","messageId":"105","endLine":4,"endColumn":71},{"ruleId":"107","severity":1,"message":"113","line":31,"column":46,"nodeType":"109","endLine":31,"endColumn":48,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":13,"column":11,"nodeType":"117","endLine":13,"endColumn":59},{"ruleId":"118","severity":1,"message":"119","line":21,"column":9,"nodeType":"117","endLine":21,"endColumn":81},{"ruleId":"115","severity":1,"message":"116","line":31,"column":11,"nodeType":"117","endLine":31,"endColumn":92},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'getErrorObj' is defined but never used.","Identifier","unusedVar","'PropTypes' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["122"],"'TO_READ' is defined but never used.","'TO_CHANGE' is defined but never used.","React Hook useEffect has missing dependencies: 'initForm' and 'initFormData'. Either include them or remove the dependency array.",["123"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [props]",{"range":"128","text":"129"},"Update the dependencies array to be: [initForm, initFormData]",{"range":"130","text":"131"},[718,720],"[props]",[984,986],"[initForm, initFormData]"]